Rename columnname in SQLITE database

This recipe follows http://www.logicalvue.com/2011/05/changing-columns-in-sqlite-tables/


1.    Create an all-new table that matches your original table, but with the changed columns. Weâ€™ll call it parameternames_new:

CREATE TABLE parameternames_new
  (
    param_no INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    param_name VARCHAR(64) NOT NULL,
    param_description VARCHAR(64) NOT NULL,
    param_unit VARCHAR(64) NOT NULL,
    param_gain FLOAT NOT NULL,
    param_offset FLOAT NOT NULL
  );

    Now we can copy the original data to the new table:

    INSERT INTO parameternames_new (param_no, param_name, param_description, param_unit, param_gain, param_offset)  SELECT parameter_no, parameter_name, description, unit, gain, offset from parameternames;


    Review the data in parameternames_new to make sure it looks correct.
    Rename the original table:

    ALTER TABLE parameternames RENAME TO parameternames_org;

    Rename the new table:

    ALTER TABLE parameternames_new RENAME TO parameternames;

    If all looks good, you can also delete the original table:

    DROP TABLE parameternames_org;

Analogous rename of columnnames in TABLE sensorparameters:


CREATE TABLE sensorparameters_new
  (
      sensor_meas_no INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
      sensor_no INTEGER NOT NULL,
      param_no INTEGER NOT NULL,
      FOREIGN KEY (sensor_no) REFERENCES sensornames (sensor_no),
      FOREIGN KEY (param_no) REFERENCES parameternames (param_no)
  );

INSERT INTO sensorparameters_new ( sensor_meas_no, sensor_no, param_no) SELECT sensor_meas_no, sensor_no, parameter_no FROM sensorparameters;

ALTER TABLE sensorparameters RENAME TO sensorparameters_org;
ALTER TABLE sensorparameters_new RENAME TO sensorparameters;

( DROP TABLE sensorparameters_org;)
