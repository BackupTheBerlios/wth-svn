--- libwth.c	Sat Mar 23 17:28:06 2002
+++ ../wth-0.4.3/libwth.c	Fri Mar 22 17:29:31 2002
@@ -254,14 +254,13 @@
     /* wind sensor */
     rw->sens[17].status  = data[9];
     rw->sens[18].status  = data[9];
-    rw->sens[19].status  = data[9];
     /* indoor sensor : temp, hum, press */
+    rw->sens[19].status  = data[10];
     rw->sens[20].status  = data[10];
     rw->sens[21].status  = data[10];
-    rw->sens[22].status  = data[10];
         
     /* status of temperature/humidity sensor 9 to 15 */
-    for ( i = 12; i < 18; i++) {
+    for ( i = 11; i < 18; i++) {
 	  rw->sens[2*i].status   = data[i];
 	  rw->sens[2*i+1].status = data[i];
     }
@@ -291,7 +290,7 @@
 
     /* number of sensors */
     if ( getbits(data[19],2,1) == 0 ) { 
-        rw->wstat.nsens = 23;
+        rw->wstat.nsens = 22;
     }
     else if ( getbits(data[19],2,1) == 1 ) {
         rw->wstat.nsens = 42;
@@ -375,7 +374,8 @@
      -1, if DCF not synchronized.
    
 */
-time_t dcftime(unsigned char *data, int ndat) {
+time_t 
+dcftime (unsigned char *data, int ndat) {
     int err;
     int tmp1;
     int tmp2;   
@@ -435,13 +435,13 @@
 
     t.tm_year = tmp1 + 10*tmp2 + 100;
 
-	/* surprise, surprise */
+    /* surprise, surprise */
     t.tm_isdst = -1;
 	
-	/* time conversion */
-	tzset();
+    /* time conversion */
+    tzset();
 
-	err = time(&ltim);
+    err = time(&ltim);
     clk = ctime(&ltim);
     syslog(LOG_DEBUG, "dcftime : local clk : %s\n", clk);
     
@@ -454,6 +454,30 @@
     return(dtim);
 }
 
+
+/*
+  settime - setting time incase DCF time is synchronized
+
+*/
+int
+settime (struct wthio *rw) {
+  struct timezone tz;
+  struct timeval tv;
+ 
+  if ( gettimeofday( &tv, &tz) == -1 )
+    return(-1);
+
+  tv.tv_sec  = rw->DCF.time;
+  tv.tv_usec = 0;
+
+  if ( settimeofday( &tv, &tz) == -1 )
+    return(-1);
+
+  return(0);
+
+}
+
+
 /* datex 
 
    data extraction
@@ -602,35 +626,23 @@
     rw->sens[18].mess[rw->wstat.ndats].sign     = 0;
     /* sens[18].mess[rw->wstat.ndats].hundreds = getbits(data[29], 3, 4); */
     /* hmm is this a violation of the protocol specification ? */
-    /*
     rw->sens[18].mess[rw->wstat.ndats].value =
       100 * ( data[29] & 0x03) +
       10  * getbits(data[28], 7, 4) +
       getbits(data[28], 3, 4);
-    */
-    rw->sens[18].mess[rw->wstat.ndats].value =
-      100 * getbits( data[29], 1, 2 ) +
-      10  * getbits(data[28], 7, 4 ) +
-      getbits(data[28], 3, 4 );
 
-    /* mean deviation of wind direction */
+    /* indoor pressure */
     rw->sens[19].mess[rw->wstat.ndats].time     = mtim;
     rw->sens[19].mess[rw->wstat.ndats].sign     = 0;
-    rw->sens[19].mess[rw->wstat.ndats].value    =
-      getbits( data[29], 4, 2 );
-   
-    /* indoor pressure */
-    rw->sens[20].mess[rw->wstat.ndats].time     = mtim;
-    rw->sens[20].mess[rw->wstat.ndats].sign     = 0;
-    rw->sens[20].mess[rw->wstat.ndats].value = 
+    rw->sens[19].mess[rw->wstat.ndats].value = 
       100 *  getbits(data[30], 7, 4) +
       10  *  getbits(data[30], 3, 4) +
       getbits(data[29], 7, 4);
 
     /* indoor temperature */
-    rw->sens[21].mess[rw->wstat.ndats].time     = mtim;
-    rw->sens[21].mess[rw->wstat.ndats].sign     = 0;
-    rw->sens[21].mess[rw->wstat.ndats].value    = 
+    rw->sens[20].mess[rw->wstat.ndats].time     = mtim;
+    rw->sens[20].mess[rw->wstat.ndats].sign     = 0;
+    rw->sens[20].mess[rw->wstat.ndats].value    = 
       10  * getbits(data[32], 3, 4) + 
       getbits(data[31], 7, 4) +
       0.1 * getbits(data[31], 7, 4);
@@ -638,9 +650,9 @@
     /* indoor humidity */
     Lo = getbits(data[32], 7, 4);
     Hi = getbits(data[33], 2, 3) << 4;
-    rw->sens[22].mess[rw->wstat.ndats].time     = mtim;
-    rw->sens[22].mess[rw->wstat.ndats].sign     = 0;
-    rw->sens[22].mess[rw->wstat.ndats].value    = Hi + Lo;
+    rw->sens[21].mess[rw->wstat.ndats].time     = mtim;
+    rw->sens[21].mess[rw->wstat.ndats].sign     = 0;
+    rw->sens[21].mess[rw->wstat.ndats].value    = Hi + Lo;
 	
     return(0);
 };
@@ -1009,20 +1021,19 @@
   /* wind sensor */
   rw->sens[17].type  = "wspd";
   rw->sens[18].type  = "wdir";
-  rw->sens[19].type  = "wdev";
   /* indoor sensor : temp, hum, press */
-  rw->sens[20].type  = "pres";
-  rw->sens[21].type  = "temp";
-  rw->sens[22].type  = "hum";
+  rw->sens[19].type  = "pres";
+  rw->sens[20].type  = "temp";
+  rw->sens[21].type  = "hum";
   /* sensor 9 is combined temperature/humidity */
-  rw->sens[23].type  = "temp";
-  rw->sens[24].type  = "hum";
+  rw->sens[22].type  = "temp";
+  rw->sens[23].type  = "hum";
       
   /* status of pressure/temperature/humidity sensor 10 to 15 */
   for ( i = 0; i < 18; i = i + 3) {
-      rw->sens[25 + i    ].type = "pres";
-      rw->sens[25 + i + 1].type = "temp";
-      rw->sens[25 + i + 2].type = "hum";
+      rw->sens[24 + i    ].type   = "pres";
+      rw->sens[24 + i + 1].type = "temp";
+      rw->sens[24 + i + 2].type = "hum";
   }
   return(0);
 }
@@ -1047,6 +1058,7 @@
   pcmd->port        = WPORT; 
   pcmd->tnport      = TNPORT;   
   pcmd->xmlport     = XMLPORT;
+  pcmd->wstype      = WSTYPE;
   return(0);
 }
 
@@ -1213,7 +1225,8 @@
                      "\t-h <hostname>\tconnect to <hostname/ipaddress>\n"
                      "\t-p <portnumber>\tuse portnumber at remote host\n"
                      "\t\tfor connection\n"
-                     "\t-s\t\tuse local serial connection\n");
+                     "\t-s\t\tuse local serial connection\n"
+	             "\t-t\t\tset time (this requires super user priviliges\n");
 
       if (error) fprintf(stderr, "%s: %s\n", error, addl);
       exit(exitcode);
@@ -1254,7 +1267,6 @@
 /* readconfig : read configuration file */
 char *
 readconfig(struct cmd *pcmd) {
-  int size = MAXBUFF;
   int ival;
   FILE *cfg;
   char line[BUFFSIZE];
@@ -1368,8 +1380,10 @@
 		  pcmd->tnport = strdup(value);
         } else if ( strcasecmp( name, "xmlport" ) == 0 ) {
 		  pcmd->xmlport = strdup(value);
+        } else if ( strcasecmp( name, "wstype" ) == 0 ) {
+		  pcmd->wstype = strdup(value);
         } else {
-	  rbuf = mkmsg("unknown option '%s' inf configuration file\n", name );
+	  rbuf = mkmsg("unknown option '%s' in configuration file\n", name );
           return(rbuf);
         }
     }		
@@ -1417,6 +1431,8 @@
   s = mkmsg("\tpcmd->tnport: %s\n",pcmd->tnport);
   strncat(t,s, strlen(s)); 
   s = mkmsg("\tpcmd->xmlport: %s\n",pcmd->xmlport);
+  strncat(t,s, strlen(s)); 
+  s = mkmsg("\tpcmd->wstype: %s\n",pcmd->wstype);
   strncat(t,s, strlen(s)); 
 
   return(t);
